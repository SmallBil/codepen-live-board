{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"src.97fe50fd.map","sourceRoot":"../src","sourcesContent":["let participants = [];\n(async () => {\n  const resp = await fetch('/api/participants');\n  participants = await resp.json();\n  renderParticipants(participants);\n})();\n\nfunction url(s) {\n  var l = window.location;\n  return ((l.protocol === \"https:\") ? \"wss://\" : \"ws://\") + l.hostname + (((l.port != 80) && (l.port != 443)) ? \":\" + l.port : \"\") + l.pathname + s;\n}\nconst WS_URL = url('');\n\nfunction start(websocketServerLocation: string) {\n  const ws = new WebSocket(websocketServerLocation);\n  ws.onmessage = (event) => {\n    participants = updateParticipants(participants, JSON.parse(event.data));\n    renderParticipants(participants);\n  };\n  ws.onclose = () => {\n    setTimeout(() => start(websocketServerLocation), 5000);\n  };\n}\n\nstart(WS_URL);\n\n\nfunction updateParticipants(participants, participant) {\n  const idx = participants.findIndex( ({ penUrl }) => penUrl === participant.penUrl)\n  if (idx === -1) {\n    return [...participants, participant];\n  } else {\n    const copy = participants.slice(0);\n    copy.splice(idx, 1, participant);\n    return copy;\n  }\n}\n\nfunction renderParticipants(participants) {\n  console.log(participants);\n  const container = document.querySelector('#frames-grid');\n  const blocks = Array.from(document.querySelectorAll('.participant'));\n  participants.forEach(p => {\n    const block = blocks.find(block => block.id === p.penUrl);\n    const newBlock = htmlToElement(`\n      <div class=\"participant\" id=\"${p.penUrl}\" data-hash=\"${p.lastHash}\">\n        <p><a target=\"_blank\" href=\"${p.penUrl}\">${p.name}: <span class=\"change-count\">${p.changeCount}</span></a></p>\n        <iframe src=\"/fetch?url=${p.fullpageUrl}\"></iframe>\n      </div>`\n      );\n    if (block) {\n      // TODO: don't touch if hash is the same\n      if (block.dataset.hash !== p.lastHash) {\n        container.insertBefore(newBlock, block);\n        container.removeChild(block);\n      }\n    } else {\n      container.appendChild(newBlock);\n    }\n  })\n}\n\nfunction htmlToElement(html) {\n  var template = document.createElement('template');\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  return template.content.firstChild;\n}\n\ndocument\n  .querySelector('.registration-form')\n  .addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) {\n  e.preventDefault();\n  const errMsgElt = document.querySelector('.registration-error');\n  const okMsgElt = document.querySelector('.registration-ok')\n  const form = e.target;\n  fetch('/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      participantName: form.participantName.value,\n      penUrl: form.penUrl.value\n    })\n  })\n  .then(resp => resp.json())\n  .then((json) => {\n    if (json.error) {\n      errMsgElt.style.display = 'initial';\n      okMsgElt.style.display = 'none';\n      errMsgElt.innerHTML = json.error;\n      // document.querySelector('.registration-ok').style.display = 'initial';\n    } else {\n      form.reset();\n      errMsgElt.style.display = 'none';\n      okMsgElt.style.display = 'initial';\n    }\n  });\n}"]}